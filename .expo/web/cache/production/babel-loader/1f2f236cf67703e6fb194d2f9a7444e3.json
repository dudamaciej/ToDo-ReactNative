{"ast":null,"code":"import _taggedTemplateLiteralLoose from\"@babel/runtime/helpers/taggedTemplateLiteralLoose\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function _templateObject4(){var data=_taggedTemplateLiteralLoose([\"\\n    border: 2px solid  #00dc00;\\n    padding: 10px;\\n    color: black;\\n    width: 60%;\\n    marginTop:30px;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteralLoose([\"\\n    marginTop: 50%;\\n    align-items: center;\\n    justifyContent: center;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteralLoose([\"\\n    color: #fff;\\n    fontSize: 20;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteralLoose([\"\\n    marginTop: 30px;\\n    backgroundColor: #00dc00;\\n    color: #FFFFFF;\\n    padding: 10px;\\n    width: 90;\\n    align-items: center;\\n    justifyContent: center;\\n    borderRadius: 10;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import styled from'styled-components';import{Header}from\"../screens/styledComponents/styledComponents\";import{useDispatch}from'react-redux';import{setNewElementToDoList}from\"../actions/todolistActions\";var Form=function Form(props){var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),titleInput=_useState2[0],setTitleInput=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),descriptionInput=_useState4[0],setDescriptionInput=_useState4[1];var titleValueChange=function titleValueChange(txt){setTitleInput(txt.nativeEvent.text);};var descriptionValueChange=function descriptionValueChange(txt){setDescriptionInput(txt.nativeEvent.text);};var saveDate=function saveDate(){dispatch(setNewElementToDoList({title:titleInput,description:descriptionInput}));props.closeForm();};return React.createElement(FormView,null,React.createElement(Header,{style:{fontWeight:'bold'}},\"\\u2500\\u2500\\u2500\\u2500  ADD NEW TASK  \\u2500\\u2500\\u2500\\u2500\"),React.createElement(CustomTextInput,{value:titleInput,onChange:titleValueChange,placeholder:\"Title\"}),React.createElement(CustomTextInput,{value:descriptionInput,onChange:descriptionValueChange,placeholder:\"Description\"}),React.createElement(SaveButton,{onPress:saveDate},React.createElement(ButtonText,{style:{fontWeight:'bold'}},\"SAVE\")));};export default Form;var SaveButton=styled.TouchableOpacity(_templateObject());var ButtonText=styled.Text(_templateObject2());var FormView=styled.View(_templateObject3());var CustomTextInput=styled.TextInput(_templateObject4());","map":{"version":3,"sources":["C:/Users/Maciej/Desktop/Projekty/ToDo-ReactNative/src/components/Form.tsx"],"names":["React","useState","styled","Header","useDispatch","setNewElementToDoList","Form","props","dispatch","titleInput","setTitleInput","descriptionInput","setDescriptionInput","titleValueChange","txt","nativeEvent","text","descriptionValueChange","saveDate","title","description","closeForm","fontWeight","SaveButton","TouchableOpacity","ButtonText","Text","FormView","View","CustomTextInput","TextInput"],"mappings":"wnCAAA,MAAOA,CAAAA,KAAP,EAAmBC,QAAnB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAAQC,MAAR,oDACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,qBAAR,kCASA,GAAMC,CAAAA,IAAe,CAAG,QAAlBA,CAAAA,IAAkB,CAAAC,KAAK,CAAG,CAC5B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAD4B,cAEOH,QAAQ,CAAS,EAAT,CAFf,wCAEtBQ,UAFsB,eAEVC,aAFU,8BAGmBT,QAAQ,CAAS,EAAT,CAH3B,yCAGtBU,gBAHsB,eAGJC,mBAHI,eAK5B,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CAC9BJ,aAAa,CAACI,GAAG,CAACC,WAAJ,CAAgBC,IAAjB,CAAb,CACH,CAFD,CAGA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACH,GAAD,CAAS,CACpCF,mBAAmB,CAACE,GAAG,CAACC,WAAJ,CAAgBC,IAAjB,CAAnB,CACH,CAFD,CAGA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBV,QAAQ,CAAwBH,qBAAqB,CAAC,CAClDc,KAAK,CAAEV,UAD2C,CAElDW,WAAW,CAAET,gBAFqC,CAAD,CAA7C,CAAR,CAKAJ,KAAK,CAACc,SAAN,GACH,CAPD,CAUA,MACI,qBAAC,QAAD,MACI,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAACC,UAAU,CAAE,MAAb,CAAf,qEADJ,CAEI,oBAAC,eAAD,EAAiB,KAAK,CAAGb,UAAzB,CAAqC,QAAQ,CAAEI,gBAA/C,CAAiE,WAAW,CAAC,OAA7E,EAFJ,CAGI,oBAAC,eAAD,EAAiB,KAAK,CAAGF,gBAAzB,CAA2C,QAAQ,CAAEM,sBAArD,CAA6E,WAAW,CAAC,aAAzF,EAHJ,CAII,oBAAC,UAAD,EAAY,OAAO,CAAGC,QAAtB,EACI,oBAAC,UAAD,EAAY,KAAK,CAAE,CAACI,UAAU,CAAE,MAAb,CAAnB,SADJ,CAJJ,CADJ,CAUH,CA/BD,CAiCA,cAAehB,CAAAA,IAAf,CAEA,GAAMiB,CAAAA,UAAU,CAAGrB,MAAM,CAACsB,gBAAV,mBAAhB,CAUA,GAAMC,CAAAA,UAAU,CAAGvB,MAAM,CAACwB,IAAV,oBAAhB,CAKA,GAAMC,CAAAA,QAAQ,CAAGzB,MAAM,CAAC0B,IAAV,oBAAd,CAMA,GAAMC,CAAAA,eAAe,CAAG3B,MAAM,CAAC4B,SAAV,oBAArB","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Header} from '../screens/styledComponents/styledComponents'\r\nimport {useDispatch} from 'react-redux';\r\nimport {setNewElementToDoList} from '../actions/todolistActions';\r\nimport {ISingleElementList} from '../entities/todoSingleElement'\r\n\r\ntype setNewElementToDoList = ReturnType<typeof setNewElementToDoList>;\r\n\r\ninterface IForm{\r\n    closeForm:() => void;\r\n}\r\n\r\nconst Form: FC<IForm> = props =>{\r\n    const dispatch = useDispatch();\r\n    const[titleInput, setTitleInput] = useState<string>('');\r\n    const[descriptionInput, setDescriptionInput] = useState<string>('');\r\n    \r\n    const titleValueChange = (txt) => {\r\n        setTitleInput(txt.nativeEvent.text);\r\n    }\r\n    const descriptionValueChange = (txt) => {\r\n        setDescriptionInput(txt.nativeEvent.text);\r\n    }\r\n    const saveDate = () => {\r\n        dispatch<setNewElementToDoList>(setNewElementToDoList({\r\n            title: titleInput,\r\n            description: descriptionInput\r\n        }as ISingleElementList\r\n        ));\r\n        props.closeForm();\r\n    }\r\n\r\n\r\n    return(\r\n        <FormView>\r\n            <Header style={{fontWeight: 'bold'}}>────  ADD NEW TASK  ────</Header>\r\n            <CustomTextInput value ={titleInput} onChange={titleValueChange} placeholder=\"Title\"/>\r\n            <CustomTextInput value ={descriptionInput} onChange={descriptionValueChange} placeholder=\"Description\"/>\r\n            <SaveButton onPress ={saveDate}>\r\n                <ButtonText style={{fontWeight: 'bold'}}>SAVE</ButtonText>\r\n            </SaveButton>\r\n        </FormView>\r\n    )\r\n};\r\n\r\nexport default Form;\r\n\r\nconst SaveButton = styled.TouchableOpacity`\r\n    marginTop: 30px;\r\n    backgroundColor: #00dc00;\r\n    color: #FFFFFF;\r\n    padding: 10px;\r\n    width: 90;\r\n    align-items: center;\r\n    justifyContent: center;\r\n    borderRadius: 10;\r\n`\r\nconst ButtonText = styled.Text`\r\n    color: #fff;\r\n    fontSize: 20;\r\n`\r\n\r\nconst FormView = styled.View`\r\n    marginTop: 50%;\r\n    align-items: center;\r\n    justifyContent: center;\r\n`\r\n\r\nconst CustomTextInput = styled.TextInput`\r\n    border: 2px solid  #00dc00;\r\n    padding: 10px;\r\n    color: black;\r\n    width: 60%;\r\n    marginTop:30px;\r\n`"]},"metadata":{},"sourceType":"module"}