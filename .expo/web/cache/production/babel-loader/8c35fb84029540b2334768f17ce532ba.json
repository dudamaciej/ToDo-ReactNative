{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{UnavailabilityError}from'@unimodules/core';import{PermissionStatus}from'unimodules-permissions-interface';import Platform from\"react-native-web/dist/exports/Platform\";import Share from\"react-native-web/dist/exports/Share\";import UUID from'uuid-js';import ExpoContacts from\"./ExpoContacts\";export{PermissionStatus};export function shareContactAsync(contactId,message){var shareOptions,url,_args=arguments;return _regeneratorRuntime.async(function shareContactAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:shareOptions=_args.length>2&&_args[2]!==undefined?_args[2]:{};if(!(Platform.OS==='ios')){_context.next=10;break;}_context.next=4;return _regeneratorRuntime.awrap(writeContactToFileAsync({id:contactId}));case 4:url=_context.sent;_context.next=7;return _regeneratorRuntime.awrap(Share.share({url:url,message:message},shareOptions));case 7:return _context.abrupt(\"return\",_context.sent);case 10:if(ExpoContacts.shareContactAsync){_context.next=12;break;}throw new UnavailabilityError('Contacts','shareContactAsync');case 12:_context.next=14;return _regeneratorRuntime.awrap(ExpoContacts.shareContactAsync(contactId,message));case 14:return _context.abrupt(\"return\",_context.sent);case 15:case\"end\":return _context.stop();}}});}export function getContactsAsync(){var contactQuery,_args2=arguments;return _regeneratorRuntime.async(function getContactsAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:contactQuery=_args2.length>0&&_args2[0]!==undefined?_args2[0]:{};if(ExpoContacts.getContactsAsync){_context2.next=3;break;}throw new UnavailabilityError('Contacts','getContactsAsync');case 3:_context2.next=5;return _regeneratorRuntime.awrap(ExpoContacts.getContactsAsync(contactQuery));case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}});}export function getPagedContactsAsync(){var contactQuery,pageSize,nOptions,_args3=arguments;return _regeneratorRuntime.async(function getPagedContactsAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:contactQuery=_args3.length>0&&_args3[0]!==undefined?_args3[0]:{};pageSize=contactQuery.pageSize,nOptions=_objectWithoutProperties(contactQuery,[\"pageSize\"]);if(!(pageSize&&pageSize<=0)){_context3.next=4;break;}throw new Error('Error: Contacts.getPagedContactsAsync: `pageSize` must be greater than 0');case 4:_context3.next=6;return _regeneratorRuntime.awrap(getContactsAsync(_objectSpread({},nOptions,{pageSize:pageSize})));case 6:return _context3.abrupt(\"return\",_context3.sent);case 7:case\"end\":return _context3.stop();}}});}export function getContactByIdAsync(id,fields){var results;return _regeneratorRuntime.async(function getContactByIdAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(ExpoContacts.getContactsAsync){_context4.next=2;break;}throw new UnavailabilityError('Contacts','getContactsAsync');case 2:if(!(id==null)){_context4.next=6;break;}throw new Error('Error: Contacts.getContactByIdAsync: Please pass an ID as a parameter');case 6:_context4.next=8;return _regeneratorRuntime.awrap(ExpoContacts.getContactsAsync({pageSize:1,pageOffset:0,fields:fields,id:id}));case 8:results=_context4.sent;if(!(results&&results.data&&results.data.length>0)){_context4.next=11;break;}return _context4.abrupt(\"return\",results.data[0]);case 11:return _context4.abrupt(\"return\",undefined);case 12:case\"end\":return _context4.stop();}}});}export function addContactAsync(contact,containerId){return _regeneratorRuntime.async(function addContactAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(ExpoContacts.addContactAsync){_context5.next=2;break;}throw new UnavailabilityError('Contacts','addContactAsync');case 2:_context5.next=4;return _regeneratorRuntime.awrap(ExpoContacts.addContactAsync(contact,containerId));case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}}});}export function updateContactAsync(contact){return _regeneratorRuntime.async(function updateContactAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(ExpoContacts.updateContactAsync){_context6.next=2;break;}throw new UnavailabilityError('Contacts','updateContactAsync');case 2:_context6.next=4;return _regeneratorRuntime.awrap(ExpoContacts.updateContactAsync(contact));case 4:return _context6.abrupt(\"return\",_context6.sent);case 5:case\"end\":return _context6.stop();}}});}export function removeContactAsync(contactId){return _regeneratorRuntime.async(function removeContactAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(ExpoContacts.removeContactAsync){_context7.next=2;break;}throw new UnavailabilityError('Contacts','removeContactAsync');case 2:_context7.next=4;return _regeneratorRuntime.awrap(ExpoContacts.removeContactAsync(contactId));case 4:return _context7.abrupt(\"return\",_context7.sent);case 5:case\"end\":return _context7.stop();}}});}export function writeContactToFileAsync(){var contactQuery,_args8=arguments;return _regeneratorRuntime.async(function writeContactToFileAsync$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:contactQuery=_args8.length>0&&_args8[0]!==undefined?_args8[0]:{};if(ExpoContacts.writeContactToFileAsync){_context8.next=3;break;}throw new UnavailabilityError('Contacts','writeContactToFileAsync');case 3:_context8.next=5;return _regeneratorRuntime.awrap(ExpoContacts.writeContactToFileAsync(contactQuery));case 5:return _context8.abrupt(\"return\",_context8.sent);case 6:case\"end\":return _context8.stop();}}});}export function presentFormAsync(contactId,contact){var formOptions,adjustedOptions,_args9=arguments;return _regeneratorRuntime.async(function presentFormAsync$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:formOptions=_args9.length>2&&_args9[2]!==undefined?_args9[2]:{};if(ExpoContacts.presentFormAsync){_context9.next=3;break;}throw new UnavailabilityError('Contacts','presentFormAsync');case 3:if(!(Platform.OS==='ios')){_context9.next=11;break;}adjustedOptions=formOptions;if(contactId){if(contact){contact=undefined;console.log('Expo.Contacts.presentFormAsync: You should define either a `contact` or a `contactId` but not both.');}if(adjustedOptions.isNew!==undefined){console.log('Expo.Contacts.presentFormAsync: formOptions.isNew is not supported with `contactId`');}}_context9.next=8;return _regeneratorRuntime.awrap(ExpoContacts.presentFormAsync(contactId,contact,adjustedOptions));case 8:return _context9.abrupt(\"return\",_context9.sent);case 11:_context9.next=13;return _regeneratorRuntime.awrap(ExpoContacts.presentFormAsync(contactId,contact,formOptions));case 13:return _context9.abrupt(\"return\",_context9.sent);case 14:case\"end\":return _context9.stop();}}});}export function addExistingGroupToContainerAsync(groupId,containerId){return _regeneratorRuntime.async(function addExistingGroupToContainerAsync$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:if(ExpoContacts.addExistingGroupToContainerAsync){_context10.next=2;break;}throw new UnavailabilityError('Contacts','addExistingGroupToContainerAsync');case 2:_context10.next=4;return _regeneratorRuntime.awrap(ExpoContacts.addExistingGroupToContainerAsync(groupId,containerId));case 4:return _context10.abrupt(\"return\",_context10.sent);case 5:case\"end\":return _context10.stop();}}});}export function createGroupAsync(name,containerId){return _regeneratorRuntime.async(function createGroupAsync$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:if(ExpoContacts.createGroupAsync){_context11.next=2;break;}throw new UnavailabilityError('Contacts','createGroupAsync');case 2:name=name||UUID.create().toString();if(containerId){_context11.next=7;break;}_context11.next=6;return _regeneratorRuntime.awrap(getDefaultContainerIdAsync());case 6:containerId=_context11.sent;case 7:_context11.next=9;return _regeneratorRuntime.awrap(ExpoContacts.createGroupAsync(name,containerId));case 9:return _context11.abrupt(\"return\",_context11.sent);case 10:case\"end\":return _context11.stop();}}});}export function updateGroupNameAsync(groupName,groupId){return _regeneratorRuntime.async(function updateGroupNameAsync$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:if(ExpoContacts.updateGroupNameAsync){_context12.next=2;break;}throw new UnavailabilityError('Contacts','updateGroupNameAsync');case 2:_context12.next=4;return _regeneratorRuntime.awrap(ExpoContacts.updateGroupNameAsync(groupName,groupId));case 4:return _context12.abrupt(\"return\",_context12.sent);case 5:case\"end\":return _context12.stop();}}});}export function removeGroupAsync(groupId){return _regeneratorRuntime.async(function removeGroupAsync$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(ExpoContacts.removeGroupAsync){_context13.next=2;break;}throw new UnavailabilityError('Contacts','removeGroupAsync');case 2:_context13.next=4;return _regeneratorRuntime.awrap(ExpoContacts.removeGroupAsync(groupId));case 4:return _context13.abrupt(\"return\",_context13.sent);case 5:case\"end\":return _context13.stop();}}});}export function addExistingContactToGroupAsync(contactId,groupId){return _regeneratorRuntime.async(function addExistingContactToGroupAsync$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:if(ExpoContacts.addExistingContactToGroupAsync){_context14.next=2;break;}throw new UnavailabilityError('Contacts','addExistingContactToGroupAsync');case 2:_context14.next=4;return _regeneratorRuntime.awrap(ExpoContacts.addExistingContactToGroupAsync(contactId,groupId));case 4:return _context14.abrupt(\"return\",_context14.sent);case 5:case\"end\":return _context14.stop();}}});}export function removeContactFromGroupAsync(contactId,groupId){return _regeneratorRuntime.async(function removeContactFromGroupAsync$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(ExpoContacts.removeContactFromGroupAsync){_context15.next=2;break;}throw new UnavailabilityError('Contacts','removeContactFromGroupAsync');case 2:_context15.next=4;return _regeneratorRuntime.awrap(ExpoContacts.removeContactFromGroupAsync(contactId,groupId));case 4:return _context15.abrupt(\"return\",_context15.sent);case 5:case\"end\":return _context15.stop();}}});}export function getGroupsAsync(groupQuery){return _regeneratorRuntime.async(function getGroupsAsync$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:if(ExpoContacts.getGroupsAsync){_context16.next=2;break;}throw new UnavailabilityError('Contacts','getGroupsAsync');case 2:_context16.next=4;return _regeneratorRuntime.awrap(ExpoContacts.getGroupsAsync(groupQuery));case 4:return _context16.abrupt(\"return\",_context16.sent);case 5:case\"end\":return _context16.stop();}}});}export function getDefaultContainerIdAsync(){return _regeneratorRuntime.async(function getDefaultContainerIdAsync$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:if(ExpoContacts.getDefaultContainerIdentifierAsync){_context17.next=2;break;}throw new UnavailabilityError('Contacts','getDefaultContainerIdentifierAsync');case 2:_context17.next=4;return _regeneratorRuntime.awrap(ExpoContacts.getDefaultContainerIdentifierAsync());case 4:return _context17.abrupt(\"return\",_context17.sent);case 5:case\"end\":return _context17.stop();}}});}export function getContainersAsync(containerQuery){return _regeneratorRuntime.async(function getContainersAsync$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:if(ExpoContacts.getContainersAsync){_context18.next=2;break;}throw new UnavailabilityError('Contacts','getContainersAsync');case 2:_context18.next=4;return _regeneratorRuntime.awrap(ExpoContacts.getContainersAsync(containerQuery));case 4:return _context18.abrupt(\"return\",_context18.sent);case 5:case\"end\":return _context18.stop();}}});}export function getPermissionsAsync(){return _regeneratorRuntime.async(function getPermissionsAsync$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:if(ExpoContacts.getPermissionsAsync){_context19.next=2;break;}throw new UnavailabilityError('Contacts','getPermissionsAsync');case 2:return _context19.abrupt(\"return\",ExpoContacts.getPermissionsAsync());case 3:case\"end\":return _context19.stop();}}});}export function requestPermissionsAsync(){return _regeneratorRuntime.async(function requestPermissionsAsync$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:if(ExpoContacts.requestPermissionsAsync){_context20.next=2;break;}throw new UnavailabilityError('Contacts','requestPermissionsAsync');case 2:_context20.next=4;return _regeneratorRuntime.awrap(ExpoContacts.requestPermissionsAsync());case 4:return _context20.abrupt(\"return\",_context20.sent);case 5:case\"end\":return _context20.stop();}}});}export var PHONE_NUMBERS='phoneNumbers';export var EMAILS='emails';export var ADDRESSES='addresses';export var IMAGE='image';export var RAW_IMAGE='rawImage';export var NOTE='note';export var BIRTHDAY='birthday';export var NON_GREGORIAN_BIRTHDAY='nonGregorianBirthday';export var NAME_PREFIX='namePrefix';export var NAME_SUFFIX='nameSuffix';export var PHONETIC_FIRST_NAME='phoneticFirstName';export var PHONETIC_MIDDLE_NAME='phoneticMiddleName';export var PHONETIC_LAST_NAME='phoneticLastName';export var SOCIAL_PROFILES='socialProfiles';export var IM_ADDRESSES='instantMessageAddresses';export var URLS='urlAddresses';export var DATES='dates';export var RELATIONSHIPS='relationships';export var Fields={ID:'id',ContactType:'contactType',Name:'name',FirstName:'firstName',MiddleName:'middleName',LastName:'lastName',MaidenName:'maidenName',NamePrefix:'namePrefix',NameSuffix:'nameSuffix',Nickname:'nickname',PhoneticFirstName:'phoneticFirstName',PhoneticMiddleName:'phoneticMiddleName',PhoneticLastName:'phoneticLastName',Birthday:'birthday',NonGregorianBirthday:'nonGregorianBirthday',Emails:'emails',PhoneNumbers:'phoneNumbers',Addresses:'addresses',SocialProfiles:'socialProfiles',InstantMessageAddresses:'instantMessageAddresses',UrlAddresses:'urlAddresses',Company:'company',JobTitle:'jobTitle',Department:'department',ImageAvailable:'imageAvailable',Image:'image',RawImage:'rawImage',ExtraNames:'extraNames',Note:'note',Dates:'dates',Relationships:'relationships'};export var CalendarFormats={Gregorian:'gregorian',Buddhist:'buddhist',Chinese:'chinese',Coptic:'coptic',EthiopicAmeteMihret:'ethiopicAmeteMihret',EthiopicAmeteAlem:'ethiopicAmeteAlem',Hebrew:'hebrew',ISO8601:'iso8601',Indian:'indian',Islamic:'islamic',IslamicCivil:'islamicCivil',Japanese:'japanese',Persian:'persian',RepublicOfChina:'republicOfChina',IslamicTabular:'islamicTabular',IslamicUmmAlQura:'islamicUmmAlQura'};export var ContainerTypes={Local:'local',Exchange:'exchange',CardDAV:'cardDAV',Unassigned:'unassigned'};export var SortTypes={UserDefault:'userDefault',FirstName:'firstName',LastName:'lastName',None:'none'};export var ContactTypes={Person:'person',Company:'company'};","map":{"version":3,"sources":["../src/Contacts.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { PermissionResponse, PermissionStatus } from 'unimodules-permissions-interface';\nimport { Platform, Share } from 'react-native';\nimport UUID from 'uuid-js';\n\nimport ExpoContacts from './ExpoContacts';\n\nexport type CalendarFormatType =\n  | typeof CalendarFormats.Gregorian\n  | typeof CalendarFormats.Buddhist\n  | typeof CalendarFormats.Chinese\n  | typeof CalendarFormats.Coptic\n  | typeof CalendarFormats.EthiopicAmeteMihret\n  | typeof CalendarFormats.EthiopicAmeteAlem\n  | typeof CalendarFormats.Hebrew\n  | typeof CalendarFormats.ISO8601\n  | typeof CalendarFormats.Indian\n  | typeof CalendarFormats.Islamic\n  | typeof CalendarFormats.IslamicCivil\n  | typeof CalendarFormats.Japanese\n  | typeof CalendarFormats.Persian\n  | typeof CalendarFormats.RepublicOfChina\n  | typeof CalendarFormats.IslamicTabular\n  | typeof CalendarFormats.IslamicUmmAlQura;\n\nexport type ContainerType =\n  | typeof ContainerTypes.Local\n  | typeof ContainerTypes.Exchange\n  | typeof ContainerTypes.CardDAV\n  | typeof ContainerTypes.Unassigned;\n\nexport type ContactType = typeof ContactTypes.Person | typeof ContactTypes.Company;\n\nexport type FieldType =\n  | typeof Fields.ID\n  | typeof Fields.ContactType\n  | typeof Fields.Name\n  | typeof Fields.FirstName\n  | typeof Fields.MiddleName\n  | typeof Fields.LastName\n  | typeof Fields.MaidenName\n  | typeof Fields.NamePrefix\n  | typeof Fields.NameSuffix\n  | typeof Fields.Nickname\n  | typeof Fields.PhoneticFirstName\n  | typeof Fields.PhoneticMiddleName\n  | typeof Fields.PhoneticLastName\n  | typeof Fields.Birthday\n  | typeof Fields.NonGregorianBirthday\n  | typeof Fields.Emails\n  | typeof Fields.PhoneNumbers\n  | typeof Fields.Addresses\n  | typeof Fields.SocialProfiles\n  | typeof Fields.InstantMessageAddresses\n  | typeof Fields.UrlAddresses\n  | typeof Fields.Company\n  | typeof Fields.JobTitle\n  | typeof Fields.Department\n  | typeof Fields.ImageAvailable\n  | typeof Fields.Image\n  | typeof Fields.RawImage\n  | typeof Fields.ExtraNames\n  | typeof Fields.Note\n  | typeof Fields.Dates\n  | typeof Fields.Relationships;\n\nexport type Date = {\n  day?: number;\n  month?: number;\n  year?: number;\n  id: string;\n  label: string;\n  format?: CalendarFormatType;\n};\n\nexport type Relationship = {\n  label: string;\n  name?: string;\n  id: string;\n};\n\nexport type Email = {\n  email?: string;\n  isPrimary?: boolean;\n  label: string;\n  id: string;\n};\n\nexport type PhoneNumber = {\n  number?: string;\n  isPrimary?: boolean;\n  digits?: string;\n  countryCode?: string;\n  label: string;\n  id: string;\n};\n\nexport type Address = {\n  street?: string;\n  city?: string;\n  country?: string;\n  region?: string;\n  neighborhood?: string;\n  postalCode?: string;\n  poBox?: string;\n  isoCountryCode?: string;\n  label: string;\n  id: string;\n};\n\nexport type SocialProfile = {\n  service?: string;\n  localizedProfile?: string;\n  url?: string;\n  username?: string;\n  userId?: string;\n  label: string;\n  id: string;\n};\n\nexport type InstantMessageAddress = {\n  service?: string;\n  username?: string;\n  localizedService?: string;\n  label: string;\n  id: string;\n};\n\nexport type UrlAddress = {\n  label: string;\n  url?: string;\n  id: string;\n};\n\nexport type Image = {\n  uri?: string;\n  width?: number;\n  height?: number;\n  base64?: string;\n};\n\nexport type Contact = {\n  id: string;\n  contactType: ContactType;\n  name: string;\n  firstName?: string;\n  middleName?: string;\n  lastName?: string;\n  maidenName?: string;\n  namePrefix?: string;\n  nameSuffix?: string;\n  nickname?: string;\n  phoneticFirstName?: string;\n  phoneticMiddleName?: string;\n  phoneticLastName?: string;\n  company?: string;\n  jobTitle?: string;\n  department?: string;\n  note?: string;\n  imageAvailable?: boolean;\n  image?: Image;\n  rawImage?: Image;\n  birthday?: Date;\n  dates?: Date[];\n  relationships?: Relationship[];\n  emails?: Email[];\n  phoneNumbers?: PhoneNumber[];\n  addresses?: Address[];\n  instantMessageAddresses?: InstantMessageAddress[];\n  urlAddresses?: UrlAddress[];\n\n  nonGregorianBirthday?: Date;\n  socialProfiles?: SocialProfile[];\n};\n\nexport type ContactResponse = {\n  data: Contact[];\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n};\n\nexport type ContactSort =\n  | typeof SortTypes.UserDefault\n  | typeof SortTypes.FirstName\n  | typeof SortTypes.LastName\n  | typeof SortTypes.None;\n\nexport type ContactQuery = {\n  pageSize?: number;\n  pageOffset?: number;\n  fields?: FieldType[];\n  sort?: ContactSort;\n  name?: string;\n  id?: string | string[];\n  groupId?: string;\n  containerId?: string;\n  rawContacts?: boolean;\n};\n\nexport type FormOptions = {\n  displayedPropertyKeys?: FieldType[];\n  message?: string;\n  alternateName?: string;\n  allowsEditing?: boolean;\n  allowsActions?: boolean;\n  shouldShowLinkedContacts?: boolean;\n  isNew?: boolean;\n  cancelButtonTitle?: string;\n  preventAnimation?: boolean;\n  groupId?: string;\n};\n\nexport type GroupQuery = {\n  groupId?: string;\n  groupName?: string;\n  containerId?: string;\n};\n\nexport type Group = {\n  name?: string;\n  id?: string;\n};\n\nexport type ContainerQuery = {\n  contactId?: string;\n  groupId?: string;\n  containerId?: string | string[];\n};\n\nexport type Container = {\n  name: string;\n  id: string;\n  type: ContainerType;\n};\n\nexport { PermissionStatus, PermissionResponse };\n\nexport async function shareContactAsync(\n  contactId: string,\n  message: string,\n  shareOptions: Object = {}\n): Promise<any> {\n  if (Platform.OS === 'ios') {\n    const url = await writeContactToFileAsync({\n      id: contactId,\n    });\n    return await Share.share(\n      {\n        url,\n        message,\n      },\n      shareOptions\n    );\n  } else if (!ExpoContacts.shareContactAsync) {\n    throw new UnavailabilityError('Contacts', 'shareContactAsync');\n  }\n  return await ExpoContacts.shareContactAsync(contactId, message);\n}\n\nexport async function getContactsAsync(contactQuery: ContactQuery = {}): Promise<ContactResponse> {\n  if (!ExpoContacts.getContactsAsync) {\n    throw new UnavailabilityError('Contacts', 'getContactsAsync');\n  }\n  return await ExpoContacts.getContactsAsync(contactQuery);\n}\n\nexport async function getPagedContactsAsync(\n  contactQuery: ContactQuery = {}\n): Promise<ContactResponse> {\n  const { pageSize, ...nOptions } = contactQuery;\n\n  if (pageSize && pageSize <= 0) {\n    throw new Error('Error: Contacts.getPagedContactsAsync: `pageSize` must be greater than 0');\n  }\n\n  return await getContactsAsync({\n    ...nOptions,\n    pageSize,\n  });\n}\n\nexport async function getContactByIdAsync(\n  id: string,\n  fields?: FieldType\n): Promise<Contact | undefined> {\n  if (!ExpoContacts.getContactsAsync) {\n    throw new UnavailabilityError('Contacts', 'getContactsAsync');\n  }\n\n  if (id == null) {\n    throw new Error('Error: Contacts.getContactByIdAsync: Please pass an ID as a parameter');\n  } else {\n    const results = await ExpoContacts.getContactsAsync({\n      pageSize: 1,\n      pageOffset: 0,\n      fields,\n      id,\n    });\n    if (results && results.data && results.data.length > 0) {\n      return results.data[0];\n    }\n  }\n  return undefined;\n}\n\nexport async function addContactAsync(contact: Contact, containerId: string): Promise<string> {\n  if (!ExpoContacts.addContactAsync) {\n    throw new UnavailabilityError('Contacts', 'addContactAsync');\n  }\n  return await ExpoContacts.addContactAsync(contact, containerId);\n}\n\nexport async function updateContactAsync(contact: Contact): Promise<string> {\n  if (!ExpoContacts.updateContactAsync) {\n    throw new UnavailabilityError('Contacts', 'updateContactAsync');\n  }\n  return await ExpoContacts.updateContactAsync(contact);\n}\n\nexport async function removeContactAsync(contactId: string): Promise<any> {\n  if (!ExpoContacts.removeContactAsync) {\n    throw new UnavailabilityError('Contacts', 'removeContactAsync');\n  }\n  return await ExpoContacts.removeContactAsync(contactId);\n}\n\nexport async function writeContactToFileAsync(\n  contactQuery: ContactQuery = {}\n): Promise<string | undefined> {\n  if (!ExpoContacts.writeContactToFileAsync) {\n    throw new UnavailabilityError('Contacts', 'writeContactToFileAsync');\n  }\n  return await ExpoContacts.writeContactToFileAsync(contactQuery);\n}\n\nexport async function presentFormAsync(\n  contactId?: string | null,\n  contact?: Contact | null,\n  formOptions: FormOptions = {}\n): Promise<any> {\n  if (!ExpoContacts.presentFormAsync) {\n    throw new UnavailabilityError('Contacts', 'presentFormAsync');\n  }\n  if (Platform.OS === 'ios') {\n    let adjustedOptions = formOptions;\n\n    if (contactId) {\n      if (contact) {\n        contact = undefined;\n        console.log(\n          'Expo.Contacts.presentFormAsync: You should define either a `contact` or a `contactId` but not both.'\n        );\n      }\n      if (adjustedOptions.isNew !== undefined) {\n        console.log(\n          'Expo.Contacts.presentFormAsync: formOptions.isNew is not supported with `contactId`'\n        );\n      }\n    }\n    return await ExpoContacts.presentFormAsync(contactId, contact, adjustedOptions);\n  } else {\n    return await ExpoContacts.presentFormAsync(contactId, contact, formOptions);\n  }\n}\n\n// iOS Only\n\nexport async function addExistingGroupToContainerAsync(\n  groupId: string,\n  containerId: string\n): Promise<any> {\n  if (!ExpoContacts.addExistingGroupToContainerAsync) {\n    throw new UnavailabilityError('Contacts', 'addExistingGroupToContainerAsync');\n  }\n\n  return await ExpoContacts.addExistingGroupToContainerAsync(groupId, containerId);\n}\n\nexport async function createGroupAsync(name?: string, containerId?: string): Promise<string> {\n  if (!ExpoContacts.createGroupAsync) {\n    throw new UnavailabilityError('Contacts', 'createGroupAsync');\n  }\n\n  name = name || UUID.create().toString();\n  if (!containerId) {\n    containerId = await getDefaultContainerIdAsync();\n  }\n\n  return await ExpoContacts.createGroupAsync(name, containerId);\n}\n\nexport async function updateGroupNameAsync(groupName: string, groupId: string): Promise<any> {\n  if (!ExpoContacts.updateGroupNameAsync) {\n    throw new UnavailabilityError('Contacts', 'updateGroupNameAsync');\n  }\n\n  return await ExpoContacts.updateGroupNameAsync(groupName, groupId);\n}\n\nexport async function removeGroupAsync(groupId: string): Promise<any> {\n  if (!ExpoContacts.removeGroupAsync) {\n    throw new UnavailabilityError('Contacts', 'removeGroupAsync');\n  }\n\n  return await ExpoContacts.removeGroupAsync(groupId);\n}\n\nexport async function addExistingContactToGroupAsync(\n  contactId: string,\n  groupId: string\n): Promise<any> {\n  if (!ExpoContacts.addExistingContactToGroupAsync) {\n    throw new UnavailabilityError('Contacts', 'addExistingContactToGroupAsync');\n  }\n\n  return await ExpoContacts.addExistingContactToGroupAsync(contactId, groupId);\n}\n\nexport async function removeContactFromGroupAsync(\n  contactId: string,\n  groupId: string\n): Promise<any> {\n  if (!ExpoContacts.removeContactFromGroupAsync) {\n    throw new UnavailabilityError('Contacts', 'removeContactFromGroupAsync');\n  }\n\n  return await ExpoContacts.removeContactFromGroupAsync(contactId, groupId);\n}\n\nexport async function getGroupsAsync(groupQuery: GroupQuery): Promise<Group[]> {\n  if (!ExpoContacts.getGroupsAsync) {\n    throw new UnavailabilityError('Contacts', 'getGroupsAsync');\n  }\n\n  return await ExpoContacts.getGroupsAsync(groupQuery);\n}\n\nexport async function getDefaultContainerIdAsync(): Promise<string> {\n  if (!ExpoContacts.getDefaultContainerIdentifierAsync) {\n    throw new UnavailabilityError('Contacts', 'getDefaultContainerIdentifierAsync');\n  }\n\n  return await ExpoContacts.getDefaultContainerIdentifierAsync();\n}\n\nexport async function getContainersAsync(containerQuery: ContainerQuery): Promise<Container[]> {\n  if (!ExpoContacts.getContainersAsync) {\n    throw new UnavailabilityError('Contacts', 'getContainersAsync');\n  }\n\n  return await ExpoContacts.getContainersAsync(containerQuery);\n}\n\nexport async function getPermissionsAsync(): Promise<PermissionResponse> {\n  if (!ExpoContacts.getPermissionsAsync) {\n    throw new UnavailabilityError('Contacts', 'getPermissionsAsync');\n  }\n\n  return ExpoContacts.getPermissionsAsync();\n}\n\nexport async function requestPermissionsAsync(): Promise<PermissionResponse> {\n  if (!ExpoContacts.requestPermissionsAsync) {\n    throw new UnavailabilityError('Contacts', 'requestPermissionsAsync');\n  }\n\n  return await ExpoContacts.requestPermissionsAsync();\n}\n\n// Legacy\nexport const PHONE_NUMBERS = 'phoneNumbers';\nexport const EMAILS = 'emails';\nexport const ADDRESSES = 'addresses';\nexport const IMAGE = 'image';\nexport const RAW_IMAGE = 'rawImage';\nexport const NOTE = 'note';\nexport const BIRTHDAY = 'birthday';\nexport const NON_GREGORIAN_BIRTHDAY = 'nonGregorianBirthday';\nexport const NAME_PREFIX = 'namePrefix';\nexport const NAME_SUFFIX = 'nameSuffix';\nexport const PHONETIC_FIRST_NAME = 'phoneticFirstName';\nexport const PHONETIC_MIDDLE_NAME = 'phoneticMiddleName';\nexport const PHONETIC_LAST_NAME = 'phoneticLastName';\nexport const SOCIAL_PROFILES = 'socialProfiles';\nexport const IM_ADDRESSES = 'instantMessageAddresses';\nexport const URLS = 'urlAddresses';\nexport const DATES = 'dates';\nexport const RELATIONSHIPS = 'relationships';\n\nexport const Fields = {\n  ID: 'id',\n  ContactType: 'contactType',\n  Name: 'name',\n  FirstName: 'firstName',\n  MiddleName: 'middleName',\n  LastName: 'lastName',\n  MaidenName: 'maidenName',\n  NamePrefix: 'namePrefix',\n  NameSuffix: 'nameSuffix',\n  Nickname: 'nickname',\n  PhoneticFirstName: 'phoneticFirstName',\n  PhoneticMiddleName: 'phoneticMiddleName',\n  PhoneticLastName: 'phoneticLastName',\n  Birthday: 'birthday',\n  NonGregorianBirthday: 'nonGregorianBirthday',\n  Emails: 'emails',\n  PhoneNumbers: 'phoneNumbers',\n  Addresses: 'addresses',\n  SocialProfiles: 'socialProfiles',\n  InstantMessageAddresses: 'instantMessageAddresses',\n  UrlAddresses: 'urlAddresses',\n  Company: 'company',\n  JobTitle: 'jobTitle',\n  Department: 'department',\n  ImageAvailable: 'imageAvailable',\n  Image: 'image',\n  RawImage: 'rawImage',\n  ExtraNames: 'extraNames',\n  Note: 'note',\n  Dates: 'dates',\n  Relationships: 'relationships',\n};\n\nexport const CalendarFormats = {\n  Gregorian: 'gregorian',\n  Buddhist: 'buddhist',\n  Chinese: 'chinese',\n  Coptic: 'coptic',\n  EthiopicAmeteMihret: 'ethiopicAmeteMihret',\n  EthiopicAmeteAlem: 'ethiopicAmeteAlem',\n  Hebrew: 'hebrew',\n  ISO8601: 'iso8601',\n  Indian: 'indian',\n  Islamic: 'islamic',\n  IslamicCivil: 'islamicCivil',\n  Japanese: 'japanese',\n  Persian: 'persian',\n  RepublicOfChina: 'republicOfChina',\n  IslamicTabular: 'islamicTabular',\n  IslamicUmmAlQura: 'islamicUmmAlQura',\n};\n\nexport const ContainerTypes = {\n  Local: 'local',\n  Exchange: 'exchange',\n  CardDAV: 'cardDAV',\n  Unassigned: 'unassigned',\n};\n\nexport const SortTypes = {\n  UserDefault: 'userDefault',\n  FirstName: 'firstName',\n  LastName: 'lastName',\n  None: 'none',\n};\n\nexport const ContactTypes = {\n  Person: 'person',\n  Company: 'company',\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}