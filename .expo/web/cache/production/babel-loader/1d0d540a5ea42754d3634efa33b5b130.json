{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{ToDoContainer}from\"../screens/styledComponents/styledComponents\";import Form from\"../components/Form\";import ListsContainer from\"../components/ListsContainer\";var ToDoList=function ToDoList(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),formView=_useState2[0],setFormView=_useState2[1];var openForm=function openForm(){setFormView(true);};var closeForm=function closeForm(){setFormView(false);};return React.createElement(ToDoContainer,null,formView?React.createElement(Form,{closeForm:closeForm}):React.createElement(ListsContainer,{openForm:openForm}));};export default ToDoList;","map":{"version":3,"sources":["C:/Users/Maciej/Desktop/Projekty/ToDo-ReactNative/src/screens/todolist.tsx"],"names":["React","useState","ToDoContainer","Form","ListsContainer","ToDoList","props","formView","setFormView","openForm","closeForm"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,aAAR,oDACA,MAAOC,CAAAA,IAAP,0BACA,MAAOC,CAAAA,cAAP,oCAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,eACSL,QAAQ,CAAU,KAAV,CADjB,wCAChBM,QADgB,eACNC,WADM,eAGtB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnBD,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAGA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBF,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,CAGA,MACI,qBAAC,aAAD,MACID,QAAQ,CACL,oBAAC,IAAD,EAAM,SAAS,CAAEG,SAAjB,EADK,CAGL,oBAAC,cAAD,EAAgB,QAAQ,CAAED,QAA1B,EAJP,CADJ,CASH,CAlBD,CAoBA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport {ToDoContainer} from '../screens/styledComponents/styledComponents';\nimport Form from '../components/Form';\nimport ListsContainer from '../components/ListsContainer';\n \nconst ToDoList = props => {\n    const[formView, setFormView] = useState<boolean>(false);\n\n    const openForm = () => {\n        setFormView(true);\n    }\n    const closeForm = () => {\n        setFormView(false);\n    }\n    return (\n        <ToDoContainer>\n           {formView ?(\n               <Form closeForm={closeForm}></Form>\n           ):(\n               <ListsContainer openForm={openForm}></ListsContainer>\n           )}\n        </ToDoContainer>\n    );\n};\n \nexport default ToDoList;\n\n"]},"metadata":{},"sourceType":"module"}